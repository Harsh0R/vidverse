// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract VideoPlatform {

    struct Video {
        uint256 id;
        address owner;
        string title;
        string description;
        string ipfsHash;
        uint256 tipAmount;
    }
    uint public test;
    Video[] public videos;
    mapping(uint256 => mapping(address => uint256)) public videoTips;

    event VideoUploaded( 
        uint256 id,
        address owner,
        string title,
        string description,
        string ipfsHash
    );

    function uploadVideo(
        string memory _title,
        string memory _description,
        string memory _ipfsHash
    ) public {
        uint256 id = videos.length;
        videos.push(Video(id, msg.sender, _title, _description, _ipfsHash, 0));
        emit VideoUploaded(id, msg.sender, _title, _description, _ipfsHash);
    }

    function getAllVideos() public view returns (Video[] memory) {
        return videos;
    }

    function tipVideoOwner(uint256 _id, uint256 _amount) public {
        require(_id < videos.length, "Invalid video ID");
        require(_amount > 0, "Tip amount must be greater than 0");

        Video storage video = videos[_id];
        require(video.owner != address(0), "Video not found");

        video.tipAmount += _amount;
        videoTips[_id][msg.sender] += _amount;
    }
}
